cloud.provider.provider0.docker.endpoint=${provider.docker.endpoint:http://127.0.0.1:2375/}
cloud.provider.provider0.template=docker

# !!! IMPORTANT NOTE !!!
# Shells exit immediately (with 0 exit code) if container runs without TTY
# Just use some workaround task to solve this. E.g. sh -c "while true; do sleep 10; done"

node.busybox.docker.image=busybox:1.23.2
node.busybox.docker.cmd=sh,-c,while true; do sleep 10; done

node.alpine.docker.image=kwart/alpine-ext:3.2-bash
node.alpine.docker.cmd=sh,-c,while true; do sleep 10; done

node.alpine-top.template=alpine

node.alpine-ssh.docker.image=kwart/alpine-ext:1.0-rich
node.alpine-ssh.docker.env=SSH_PORT=8822#ROOT_PASSWORD=alpine
node.alpine-ssh.docker.env.splitter=#
node.alpine-ssh.docker.ssh.user=root
node.alpine-ssh.docker.ssh.password=alpine
node.alpine-ssh.docker.ssh.privateKey=
node.alpine-ssh.docker.ssh.port=8822

node.bridged.template=alpine-ssh
node.bridged.docker.networkMode=bridge
node.bridged.docker.env=SSH_PORT=9922#ROOT_PASSWORD=alpine
node.bridged.docker.portBindings=19922:9922
node.bridged.docker.inboundPorts=9922
node.bridged.docker.waitForPorts=9922
node.bridged.docker.ssh.port=9922

node.privileged.template=bridged
node.privileged.docker.portBindings=
node.privileged.docker.waitForPorts=
node.privileged.docker.privileged=true

node.capabilities.template=bridged
node.capabilities.docker.portBindings=
node.capabilities.docker.waitForPorts=
node.capabilities.docker.capAdd=NET_RAW,NET_ADMIN
